version: '3.4'

services:

  repository-cache:
    image: "${docker.image}-redis:${docker.tag}"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: repository-cache_1

  repository-database:
    image: "${docker.image}-postgresql:${docker.tag}"
    environment:
      POSTGRESQL_DATABASE: "${REPOSITORY_DATABASE_NAME:-repository}"
      POSTGRESQL_PASSWORD: "${REPOSITORY_DATABASE_PASS:-repository}"
      POSTGRESQL_POSTGRES_PASSWORD: "${REPOSITORY_DATABASE_PASS:-repository}"
      POSTGRESQL_USERNAME: "${REPOSITORY_DATABASE_USER:-repository}"
    volumes:
      - "repository-database-volume:/bitnami/postgresql"

  repository-search-elastic:
    image: "${docker.image}-elasticsearch:${docker.tag}"
    environment:
      ES_JAVA_OPTS: >-
        -Xms${REPOSITORY_SEARCH_ELASTIC_JAVA_XMS:-1g}
        -Xmx${REPOSITORY_SEARCH_ELASTIC_JAVA_XMX:-1g}
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.port=7199
        -Dcom.sun.management.jmxremote.ssl=false
      discovery.type: "single-node"
      cluster.routing.allocation.disk.threshold_enabled: "false"
    expose:
      - "7199"
      - "9300"
    volumes:
      - "repository-search-elastic-volume:/usr/share/elasticsearch/data"

  repository-search-elastic-tracker:
    image: "${docker.image}-repository-search-elastic-tracker:${docker.tag}"
    command:
      - -Xms${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMS:-1g}
      - -Xmx${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMX:-1g}
      - -Dcom.sun.management.jmxremote
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.port=7199
      - -Dcom.sun.management.jmxremote.ssl=false
    environment:
      REPOSITORY_SEARCH_ELASTIC_HOST: repository-search-elastic
      REPOSITORY_SEARCH_ELASTIC_PORT: "9200"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
      REPOSITORY_SERVICE_ADMIN_PASS: "${REPOSITORY_SERVICE_ADMIN_PASS:-admin}"
    expose:
      - "7199"

  repository-search-solr4:
    image: "${docker.image}-repository-search-solr4:${docker.tag}"
    environment:
      CATALINA_OPTS: >-
        -Xms${REPOSITORY_SEARCH_SOLR4_JAVA_XMS:-1g}
        -Xmx${REPOSITORY_SEARCH_SOLR4_JAVA_XMX:-1g}
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.port=7199
        -Dcom.sun.management.jmxremote.ssl=false
        -javaagent:/opt/alfresco/tomcat/agent/jmx_prometheus_javaagent.jar=9090:/opt/alfresco/tomcat/agent/jmx-exporter-config.yaml
      REPOSITORY_SEARCH_SOLR4_HOST: repository-search-solr4
      REPOSITORY_SEARCH_SOLR4_PORT: "8080"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
    expose:
      - "7199"
      - "9090"
    volumes:
      - "repository-search-solr4-volume:/opt/alfresco/alf_data"
    depends_on:
      - repository-service

  repository-service:
    image: "${docker.image}-repository-service:${docker.tag}"
    environment:
      CATALINA_OPTS: >-
        -Xms${REPOSITORY_SERVICE_JAVA_XMS:-1g}
        -Xmx${REPOSITORY_SERVICE_JAVA_XMX:-1g}
        -Dcaches.join=tcpip
        -Dcaches.join.tcpip.members=repository-service_1
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.port=7199
        -Dcom.sun.management.jmxremote.ssl=false
        -javaagent:/opt/alfresco/tomcat/agent/jmx_prometheus_javaagent.jar=9090:/opt/alfresco/tomcat/agent/jmx-exporter-config.yaml
      REPOSITORY_CACHE_HOST: repository-cache
      REPOSITORY_CACHE_PORT: "6379"
      REPOSITORY_DATABASE_HOST: repository-database
      REPOSITORY_DATABASE_NAME: "${REPOSITORY_DATABASE_NAME:-repository}"
      REPOSITORY_DATABASE_PASS: "${REPOSITORY_DATABASE_PASS:-repository}"
      REPOSITORY_DATABASE_PORT: "5432"
      REPOSITORY_DATABASE_USER: "${REPOSITORY_DATABASE_USER:-repository}"
      REPOSITORY_SEARCH_ELASTIC_HOST: repository-search-elastic
      REPOSITORY_SEARCH_ELASTIC_PORT: "9200"
      REPOSITORY_SEARCH_SOLR4_HOST: repository-search-solr4
      REPOSITORY_SEARCH_SOLR4_PORT: "8080"
      REPOSITORY_SERVICE_ADMIN_PASS: "${REPOSITORY_SERVICE_ADMIN_PASS:-admin}"
      REPOSITORY_SERVICE_GUEST_PASS: "${REPOSITORY_SERVICE_GUEST_PASS:-}"
      REPOSITORY_SERVICE_GUEST_USER: "${REPOSITORY_SERVICE_GUEST_USER:-}"
      REPOSITORY_SERVICE_HOME_APPID: "${COMPOSE_PROJECT_NAME:-compose}"
      REPOSITORY_SERVICE_HOME_PROVIDER: "${REPOSITORY_SERVICE_PROVIDER:-org.edu_sharing.service.provider.ElasticSearchProvider}"
      REPOSITORY_SERVICE_HOST_EXTERNAL: "${REPOSITORY_SERVICE_HOST:-repository.127.0.0.1.nip.io}"
      REPOSITORY_SERVICE_HOST_INTERNAL: repository-service
      REPOSITORY_SERVICE_PORT_EXTERNAL: "${REPOSITORY_SERVICE_PORT_HTTP:-8100}"
      REPOSITORY_SERVICE_PORT_INTERNAL: "8080"
      REPOSITORY_SMTP_AUTH: "${REPOSITORY_SMTP_AUTH:-}"
      REPOSITORY_SMTP_FROM: "${REPOSITORY_SMTP_FROM:-noreply@repository.127.0.0.1.nip.io}"
      REPOSITORY_SMTP_HOST: "${REPOSITORY_SMTP_HOST:-}"
      REPOSITORY_SMTP_PASS: "${REPOSITORY_SMTP_PASS:-}"
      REPOSITORY_SMTP_PORT: "${REPOSITORY_SMTP_PORT:-25}"
      REPOSITORY_SMTP_REPL: "${REPOSITORY_SMTP_REPL:-false}"
      REPOSITORY_SMTP_USER: "${REPOSITORY_SMTP_USER:-}"
      REPOSITORY_TRANSFORM_HOST: repository-transform
      REPOSITORY_TRANSFORM_PORT: "8100"
    expose:
      - "7199"
      - "8080"
      - "9090"
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:${REPOSITORY_SERVICE_PORT_HTTP:-8100}:8081"
    volumes:
      - "repository-service-volume-data:/opt/alfresco/alf_data"
      - "repository-service-volume-shared:/usr/local/tomcat/shared"
    depends_on:
      - repository-cache
      - repository-database
      - repository-transform

  repository-transform:
    image: "${docker.image}-repository-transform:${docker.tag}"
    expose:
      - "8100"

volumes:
  repository-database-volume:
    name: "${COMPOSE_PROJECT_NAME:-compose}_repository-database-volume"
    external: true
  repository-search-elastic-volume:
    name: "${COMPOSE_PROJECT_NAME:-compose}_repository-search-elastic-volume"
    external: true
  repository-search-solr4-volume:
    name: "${COMPOSE_PROJECT_NAME:-compose}_repository-search-solr4-volume"
    external: true
  repository-service-volume-data:
    name: "${COMPOSE_PROJECT_NAME:-compose}_repository-service-volume-data"
    external: true
  repository-service-volume-shared:
    name: "${COMPOSE_PROJECT_NAME:-compose}_repository-service-volume-shared"
    external: true
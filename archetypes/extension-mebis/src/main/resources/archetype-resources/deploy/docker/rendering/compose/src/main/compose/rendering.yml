version: '3.4'

services:

  rendering-cache:
    image: "${docker.image}-redis:${docker.tag}"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: rendering-cache_1

  rendering-database:
    image: "${docker.image}-mariadb:${docker.tag}"
    environment:
      MARIADB_DATABASE: "${SERVICES_RENDERING_DATABASE_NAME:-rendering}"
      MARIADB_ROOT_PASSWORD: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      MARIADB_PASSWORD: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      MARIADB_USER: "${SERVICES_RENDERING_DATABASE_USER:-rendering}"
    volumes:
      - "rendering-database-volume:/bitnami/mariadb"

  rendering-service:
    image: "${docker.image}-rendering-service:${docker.tag}"
    environment:
      SERVICES_RENDERING_CACHE_HOST: rendering-cache
      SERVICES_RENDERING_CACHE_PORT: "6379"
      SERVICES_RENDERING_DATABASE_HOST: rendering-database
      SERVICES_RENDERING_DATABASE_NAME: "${SERVICES_RENDERING_DATABASE_NAME:-rendering}"
      SERVICES_RENDERING_DATABASE_PASS: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      SERVICES_RENDERING_DATABASE_PORT: "3306"
      SERVICES_RENDERING_DATABASE_USER: "${SERVICES_RENDERING_DATABASE_USER:-rendering}"
      SERVICES_RENDERING_SERVICE_HOST_EXTERNAL: "${SERVICES_RENDERING_SERVICE_HOST:-rendering.services.127.0.0.1.nip.io}"
      SERVICES_RENDERING_SERVICE_HOST_INTERNAL: rendering-service
      SERVICES_RENDERING_SERVICE_PORT_EXTERNAL: "${SERVICES_RENDERING_SERVICE_PORT_HTTP:-9100}"
      SERVICES_RENDERING_SERVICE_PORT_INTERNAL: "8080"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
    expose:
      - "8080"
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:${SERVICES_RENDERING_SERVICE_PORT_HTTP:-9100}:8081"
    volumes:
      - "rendering-service-volume:/var/cache/esrender"
    depends_on:
      - rendering-cache
      - rendering-database

  rendering-service-init:
    image: "${docker.image}-rendering-service:${docker.tag}"
    command: ["init.sh"]
    environment:
      SERVICES_RENDERING_SERVICE_HOST_INTERNAL: rendering-service
      SERVICES_RENDERING_SERVICE_PORT_INTERNAL: "8080"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
      REPOSITORY_SERVICE_ADMIN_PASS: "${REPOSITORY_SERVICE_ADMIN_PASS:-admin}"
    depends_on:
      - rendering-service

volumes:
  rendering-database-volume:
    name: "${COMPOSE_PROJECT_NAME:-compose}_rendering-database-volume"
    external: true
  rendering-service-volume:
    name: "${COMPOSE_PROJECT_NAME:-compose}_rendering-service-volume"
    external: true
